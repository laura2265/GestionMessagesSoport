import './soportChat.css'
import chat from '../../assets/img/chat-en-vivo.png'
import { useEffect, useRef, useState } from 'react'
import Jose from '../../assets/img/empleado-de-oficina1.png'
import Enviar from '../../assets/img/enviar.png'
import Notificacion from '../../assets/sounds/Notificacion.mp3'

function SoportChat (){
    const [isChatVisible, setIsChatVisible] = useState(false)
    const [waitingForDocument, setWaitingForDocument] = useState(false);
    const [serviceData, setServiceData] = useState([])
    const [message, setMessages] = useState([
        {
            sender: 'bot', text: `Hola, bienvenido a tu chat üòä\n¬øEn que puedo ayudarte?`,
            buttons:["Falla conexi√≥n", "Cambiar Contrase√±a", "Cancelar Servicio", "Cambio de plan", "Traslado", "Solicitar servicio", "PQR(Peticion, Queja, Reclamo)", "Pagar Facturas", "Cambio de titular", "Otro"]
        }
    ])
    

    const [handleNewMessage, setHandleNewMessage] = useState(false)
    const [userInput, setUserInput] = useState("");
    const audioRef = useRef(new Audio(Notificacion))

    const toggleChat=()=>{
        setIsChatVisible(!isChatVisible)
        setHandleNewMessage(false)
    }

    const handleUserInput = (e) => {
        setUserInput(e.target.value)
    }

    const closeChat = () => {
        setIsChatVisible(false)
    }
    
    const addBotMessage = (text, buttons) => {
      setMessages((prev) => [...prev, { sender: 'bot', text, buttons }]);
  
      if (isChatVisible) {
          setHandleNewMessage(true);
          playNotificacionSound();
      }
  };
  

    const wisphub = async (cedula) => {
      try {
        const response = await fetch(`http://localhost:3001/wisphub-data/${cedula}`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          }
        })

        if(!response.ok){
          throw new Error(`Error al momento de consultar los datos da la cedula: ${cedula}`); 
        }

        const data = await response.json();
        const result = data.data;
        console.log('datos: ', result)
        if(response && result.length > 0){
          setServiceData(result)
            setTimeout(() => addBotMessage(`se encontraron los siguientes servicios, si desea consultar uno has clic en el servicio a consultar. `,
                result.map(item => item.usuario) ), 1000)
               
        }else{
            setMessages((prevMessage) => [
                ...prevMessage, { sender: 'bot', text: `No se encontro servicios asociados con la cedual ${cedula} üò¢`}
            ])
        }
      } catch (error) {
        console.error('Error al momento de consutlar los datos de la api: ', error)
      }
    }

    const sendMessage = () => {
        if(userInput.trim() === "" ) return;
         setMessages((prevMessage) => [...prevMessage, {sender: "user", text: userInput}])

         if (waitingForDocument) {
            wisphub(userInput)
            setWaitingForDocument(false)
          } else if (userInput.toLowerCase().includes('consultar')) {
            setTimeout(()=> addBotMessage('Consultando, por favor ingrese su n√∫mero de documento'),1000) 
            setWaitingForDocument(true)
          } else if (userInput.toLowerCase().includes('personal')) {
            setTimeout(() => addBotMessage('Nuestro personal est√° conformado por Jose y Ambar'),1000)
          } else {
            setTimeout(() => addBotMessage('Lo siento, no entiendo esa solicitud üò¢'),1000)
          }
         setUserInput("")
    }

    const handleButtonClick = async (option) => {
      setMessages((prevMessage) => [...prevMessage, { sender: 'user', text: option }]);

  
      if (option === "Falla conexi√≥n") {
        setTimeout(() => addBotMessage(`Al parecer tienes problemas con tu servicio, vamos a hacer unas pruebas para poder ayudarte. \n¬øQu√© tipo de problema tiene? escoja el problema que desea solucionar:`,
          ["‚úÖ No tengo internet.", "üê¢ Internet lento.", "üåê No cargan p√°ginas.", "üì∫ Se√±al de Televisi√≥n.", "‚ö° Internet inestable.", "üîòOtro problema"]
        ),1000);
        setWaitingForDocument(true);

        
      } else if (option === "Cambiar Contrase√±a") {
        setTimeout(() => addBotMessage(`Para poder solicitar el cambio de contrase√±a, te vamos a solicitar unos datos, los cuales vas a enviar en un solo mensaje separado por *Comas*, *Tipo lista sin n√∫meros ni caracteres especiales*, o tambien *De corrido pero con espacios*. \n
            Los datos son: 
            \n
            1Ô∏è‚É£ Nombre completo del titular del servicio.
            \n
            2Ô∏è‚É£ N√∫mero de documento del titular.
            \n
            3Ô∏è‚É£N√∫mero de tel√©fono o contacto.
            \n
            4Ô∏è‚É£Correo electr√≥nico registrado.
            \n
            5Ô∏è‚É£Servicio por el cual solicita el cambio de contrase√±a.
            \n
            6Ô∏è‚É£Motivo de cambio de contrase√±a.
            \n
            si no tiene correo registrado escriba *null*.`), 1000);
      } else if (option === "Cancelar Servicio") {
        setTimeout(() => addBotMessage(`Se√±or/a, para realizar esta acci√≥n puedes acercarte a la oficina m√°s cercana con la fotocopia de la cedula y la carta con el motivo de porque va a cancelaci√≥n el servicio.`), 1000);
      } else if(option === "Cambio de plan"){
        setTimeout(() => addBotMessage(`Para poder solicitar un cambio de plan, te vamos a solicitar unos datos, los cuales vas a enviar en un solo mensaje separado por *Comas*, *Tipo lista sin n√∫meros ni caracteres especiales*, o tambien *De corrido pero con espacios*.\n 

          Los datos son: 
          \n
          1Ô∏è‚É£ Nombre completo del titular del servicio.
          \n
          2Ô∏è‚É£ N√∫mero de documento del titular.
          \n
          3Ô∏è‚É£ El servicio que desea cancelar *(Internet, TV, etc.)*.
          \n
          6Ô∏è‚É£Motivo de la cancelaci√≥n del servicio.`), 1000);
      }else if(option === 'Traslado'){
        setTimeout(() => addBotMessage('Se√±or/a, para poder realizar esta acci√≥n puede pasar a la oficina m√°s cercana con carta del traslado, copia del recibo del nuevo domicilio ya sea de la luz, del agua, etc.'), 1000)
      }else if(option === 'Solicitar servicio'){
        setTimeout(() => addBotMessage(`Se√±or/a, para realizar esta acci√≥n puede acercarse a la oficina mas cercana y llevar la *Fotocopia del documento*.
          \nSi usted no es el due√±o de la casa tiene que llevar la fotocopia del documento, con una carta firmada por el sue√±o de la casa dando el permiso para poder instalar el servicio y un recibo de la casa.`), 1000)
      }else if(option === 'PQR(Peticion, Queja, Reclamo)'){
        setTimeout(() => addBotMessage(`Para realizar la solicitud de un *PQR* te vamos a solicitar unos datos para poder pasarte con un asesor. Los datos que te solicitamos los vas a enviar en un solo mensaje donde pondr√°s los datos separados por *Comas*, *Tipo lista sin caracteres especiales* o *De corrido con Espacios*. 
          \n
            Si vas a agregar la fecha que sea de la siguiente manera *dd-mm-aa* o tambien podr√≠a ser de la siguiente manera *dd/mm/aa*.
            \n
            Los datos son: 
            \n
            üìå Nombre completo
            \n
            üî¢ N√∫mero de documento.
            \n
            üìÇ Tipo de solicitud *(Petici√≥n, Queja, Reclamo).
            \n
            üìÜ Fecha de cuando ocurri√≥.
            \n
            üìùDescripci√≥n del problema.`), 1000)
      }else if (option === 'Pagar Facturas') {
        setTimeout(() => addBotMessage(
            `Se√±or/a, para poder realizar esta acci√≥n puede acercarse a la direcci√≥n Cra. 19c Sur #52-26, Barrio San Carlos, Bogot√°, de lunes a viernes de 8 am a 4:30 pm y los s√°bados de 9 am a 4 pm y realizar el pago.\n\n` +
            `Si desea realizar el pago por otro medio, haga clic en el bot√≥n:`,
            ['https://clientes.portalinternet.net/saldo/super-tv/']
        ), 1000);
    }else if(option === 'Cambio de titular'){
        setTimeout(() => addBotMessage(`Se√±or/a, para realizar esta acci√≥n  te vamos a solicitar unos datos los cuales vas a llevar al punto m√°s cercano para poder ayudarte con esta solicitud. Los datos son los siguientes: 
          \n1Ô∏è‚É£Copia de documento del *Titular anterior*
          \n2Ô∏è‚É£Copia del documento de la persona a la que se le va a realizar el servicio.`), 1000)

      }else if(option === 'Otro'){
        setTimeout(() => addBotMessage(`Para poder ayudarte con tu problema te vamos a pedir unos datos para poder ayudarte. Los datos los vas a enviar en un solo mensaje donde los vas a enviar *Tipo lista sin caracteres especiales*, Separados por *Comas* o tambien de corrido con *Espacios*.
          \nAl momento colocar los datos, al llegar al punto 3 donde pregunta si es titular. Por favor colocar *Si* o *No*.
          \n1Ô∏è‚É£ Nombre completo.
          \n2Ô∏è‚É£ Numero de documento.
          \n3Ô∏è‚É£¬øEs titular de alg√∫n servicio?
          \n4Ô∏è‚É£ Descripci√≥n del problema o duda que desea consultar.`),1000)

      //Apartado de no tengo internet
      }else if(option === "‚úÖ No tengo internet."){
        setTimeout(() => addBotMessage(`Para poder ayudare con tu problema, Podr√≠as escoger la opci√≥n *Un equipo*, de lo contrario escoge la opci√≥n *M√∫ltiples equipos*`,
          ["üì± Un equipo", "üíªüì± M√∫lples aquipos"]
        ),1000);
        setWaitingForDocument(true);

      }else if(option === 'üì± Un equipo'){
        setTimeout(() => addBotMessage(`¬øEstas conectado a *WIFI* o cable *Ethernet*?`,
          ["üì∂ WIFI", "üîå Cable Ethernet"]
        ),1000);
        setWaitingForDocument(true);
      }else if(option === 'üì∂ WIFI'){
        setTimeout(() => addBotMessage(`Vamos a solucionar tu problema. A continuaci√≥n te vamos a presentar una serie de soluciones para ayudarte con tu problema:
          \n1Ô∏è‚É£ Olvida la red *WIFI* y vuelve a conectarte.
          \n2Ô∏è‚É£ Prueba con otra red *WIFI* o con datos si es posible.
          \n3Ô∏è‚É£ Actualiza el sistema operativo del sistema.
          \nSi no sabes realizar el ultimo punto, escoge la opci√≥n *Ayuda*, de lo contrario escoge la opci√≥n *Seguir*`,
          ["üÜò Ayuda", "‚û°Ô∏è Seguir"]
        ),1000);
        setWaitingForDocument(true);
      }else if(option === 'üÜò Ayuda'){
        setTimeout(() => addBotMessage(`Para poder ayudarte con esto, nos podr√≠as indicar que tipo de dispositivo estas utilizando.`,
          ["üîπ Windows", "üîπMac", "üîπ Android", "üîπiPhone"]
        ),1000);
        setWaitingForDocument(true);

        //dispositivo internet
      }else if(option === 'üîπ Windows'){
        setTimeout(() => addBotMessage(`A continuaci√≥n te mostraremos el paso a paso para revisar si la tarjeta de red del dispositivo esta habilitada:

            \n 1Ô∏è‚É£ Pulse *Windows+i* y haz clic en Windows Update.
                  
            \n 2Ô∏è‚É£Haz clic en *Buscar actualizaciones* y sigue las instrucciones.
                
            \n 3Ô∏è‚É£Si hay actualizaciones pendientes, instala y reinicia el *Dispositivo*.`),1000);

            setTimeout(() => addBotMessage(`Si te funciono escoge la opci√≥n *Si funciono*, de lo contrario escoge la opci√≥n *No funciono*.`,
              ["‚úÖ Si funciono", "‚ùé No funciono"]
            ), 1000)
        setWaitingForDocument(true);
      }else if(option === 'üîπMac'){
        setTimeout(() => addBotMessage(`A continuaci√≥n te mostraremos el paso a paso para revisar si la tarjeta de red del dispositivo esta habilitada:
            \n
            1Ô∏è‚É£ Con√©ctate a una red *WIFI*.
            \n
            2Ô∏è‚É£ Ve a men√∫ de Apple üçè, luego a *Configuraci√≥n del sistema* y por ultimo a *General*.
            \n
            3Ô∏è‚É£Selecciona *Actualizaci√≥n de software*.
            \n
            4Ô∏è‚É£ Si hay una actualizaci√≥n disponible, haz clic en *Actualizar ahora*.
            \n
            5Ô∏è‚É£Espera a que termine y si es necesario reinicia el *Dispositivo*.`),1000);
            setTimeout(() => addBotMessage(`Si te funciono escoge la opci√≥n *Si funciono*, de lo contrario escoge la opci√≥n *No funciono*.`,
              ["‚úÖ Si funciono", "‚ùé No funciono"]
            ), 1000)
        setWaitingForDocument(true);
      }else if(option === 'üîπ Android'){
        setTimeout(() => addBotMessage(`A continuaci√≥n te mostraremos el paso a paso para revisar si la tarjeta de red del dispositivo esta habilitada:
          \n
          1Ô∏è‚É£ Con√©ctate a una red *WIFI*.
          \n     
          2Ô∏è‚É£ Ve a *Ajustes*, luego te diriges a *Sistema* y por ultimo a *Actualizaci√≥n de software*.
          \n    
          3Ô∏è‚É£ Entra en *Buscar actualizaciones*.
          \n     
          4Ô∏è‚É£ Si hay actualizaciones disponibles, desc√°rguela  e inst√°lela.
          \n    
          5Ô∏è‚É£Si es necesario reinicie el *Dispositivo*.`),1000);

          setTimeout(() => addBotMessage(`Si te funciono escoge la opci√≥n *Si funciono*, de lo contrario escoge la opci√≥n *No funciono*.`,
            ["‚úÖ Si funciono", "‚ùé No funciono"]
          ), 1000)
        setWaitingForDocument(true);
      }else if(option === 'üîπiPhone'){
        setTimeout(() => addBotMessage(`A continuaci√≥n te mostraremos el paso a paso para revisar si la tarjeta de red del dispositivo esta habilitada:
          \n
          1Ô∏è‚É£ Con√©ctate a una red *WIFI*.
          \n
          2Ô∏è‚É£Ve a *Ajustes*, luego te diriges a *General* y por ultimo a *Actualizaci√≥n de software*
          \n
          3Ô∏è‚É£ Si hay actualizaciones pendientes, descargarlas e instalarlas.
          \n
          4Ô∏è‚É£Si es necesario reinicie el .*Dispositivo*`),1000);

          setTimeout(() => addBotMessage(`Si te funciono escoge la opci√≥n *Si funciono*, de lo contrario escoge la opci√≥n *No funciono*.`,
            ["‚úÖ Si funciono", "‚ùé No funciono"]
          ), 1000)
        setWaitingForDocument(true);
      }else if(option === "‚úÖ Si funciono"){
        setTimeout(() => addBotMessage(`!Genial¬° si necesitas ayuda escribe seguir para volver iniciar üòä.`), 1000)
      }

      //partado de Internet lento
      else if(option === "üê¢ Internet lento."){
        
      }else if(option === "üåê No cargan p√°ginas."){
        
      }else if(option === "üì∫ Se√±al de Televisi√≥n."){
        
      }else if(option === "‚ö° Internet inestable."){
        
      }else if(option === "üîòOtro problema"){
        
      }
  };
    //notificacion
    const playNotificacionSound = () =>{
        audioRef.current.play().catch((error)=>{
            console.error('Error al reproducir el sonido: ', error)
        })
    }

    return(
        <div className="Schats">
            <div className="chat-icon-container" onClick={toggleChat}>

              <img src={chat} className='chat-icon' alt='Chat De Soporte' />
              {handleNewMessage && <span className="notification-circle"></span>}
            </div>

            <div className={`chat-box ${isChatVisible ? 'visible': ''}`}>
                <div className='contentTitleJ'>
                    <img src={Jose} alt='Soporte En Linea' />
                    <p>Jose</p>
                    <span className='noti'></span>
                    <p className='linea'>En Linea</p>
                </div>

                <button className='close-btn' onClick={closeChat}>X</button>
                <div className='content-messages'>
                   {message.map((message, index) => (
                     <div key={index} className={`message ${message.sender}`}>
                       {message.text.split("\n").map((line, i) => (
                         <p key={i}>{line}</p>
                       ))}
                       {message.buttons && (
                         <div className="buttons-container">
                           {message.buttons.map((buttonText, btnIndex) =>{
                            if(buttonText.includes('https://clientes.portalinternet.net/saldo/super-tv/')){
                              return(
                                <a key={btnIndex} href={buttonText}>
                                  <button className="service-button">
                                    üîó Metodo de Pago
                                  </button>
                                </a>
                              )
                            }else{
                              return(
                                <button
                                  key={btnIndex}
                                  onClick={() => handleButtonClick(buttonText)}
                                  className="service-button"
                                >
                                  {buttonText}
                                </button>
                              )
                            }
                           } )}
                         </div>
                       )}
                     </div>
                   ))}
                 </div>

                <div className='content-input'>
                    <input
                        type='text'
                        placeholder='Escribe tu respuesta...'
                        className='chat-input'
                        value={userInput}
                        onChange={handleUserInput}
                        onKeyDown={(e) => e.key === "Enter" && sendMessage()}
                    />
                    <button className='send-btn' onClick={sendMessage}><img src={Enviar}/> </button>
                </div>
            </div>
        </div>
    )
}

export default SoportChat